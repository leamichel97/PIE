# -*- coding: utf-8 -*-
"""
  run_parameters_init.py generated by WhatsOpt 1.9.4
"""
import numpy as np
from numpy import nan

def initialize(mda):

  mda['a'] = [80,44.04074,31.48271,19.99465,8.95877,90.72782,27.45211,6.70369,2.7993,2.7993,80,44.04074,31.48271,19.99465,8.95877,90.72782,27.45211,6.70369,2.7993,2.7993,80,44.04074,31.48271,19.99465,8.95877,90.72782,27.45211,6.70369,2.7993,2.7993,4.09558,124.86209] # Coefficient (Without unit)
  mda['b'] = [0.80,1.06207,0.78811,0.71253,0.68815,0.44422,0.44623,0.68041,0.91199,0.91199,0.80,1.06207,0.78811,0.71253,0.68815,0.44422,0.44623,0.68041,0.91199,0.91199,0.80,1.06207,0.78811,0.71253,0.68815,0.44422,0.44623,0.68041,0.91199,0.91199,0.96587,0.31031] # Coefficient (Without unit)
  mda['Cf'] = 15 # Fuel cost - €kg^-1
  mda['CostAircraft'] = 4 # Cost of aircraft operation + fuel - k€/h
  mda['CostRunwayMaint'] = 25 # Cost of runway maintenance per year - k€
  mda['Cox'] = 0.45 # Oxydizer cost - €kg^-1
  mda['Cp'] = 0.9695 # Profit retention cost reduction factor (Without unit)
  mda['Cpres'] = 50 # Pressurizant cost - €kg^-1
  mda['C_PL'] = 5.51 # Payload charge site fee - €kg^-1
  mda['DD'] = 3 # Design and development (Without unit)
  mda['ExtRunway'] = 1.0 # Runway extension - km
  mda['F'] = 1220 # Launch site fees - k€
  mda['f1'] = 1.0 # Technical development status factor (Without unit)
  mda['f10'] = 0.85 # Cost engineering factor (Without unit)
  mda['f11'] = 0.50 # FCommercial venture factor (Without unit)
  mda['f3'] = 1.0 # Team experience factor (Without unit)
  mda['f8'] = 0.86 # Country productivity factor (Without unit)
  mda['fc'] = 0.60 # Assembly and integration factor (Without unit)
  mda['fv'] = 0.50 # Vehicle type factor (Without unit)
  mda['HoursAircraft'] = 4 # Hours of aircraft flight per launch - h
  mda['HW'] = [1,1,5,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1] # Numbers of units (Without unit)
  mda['I'] = 100 # Public damage insurance - M€
  mda['L'] = 0.56 # Average learning factor operations (Without unit)
  mda['Ld'] = [1,1,0.8,1,1,1,1,1,1,1,1,1,0.9,1,1,1,1,1,1,1,1,1,0.5,1,1,1,1,1,1,1,1,1] # the learning curve associated with the development of the total number of hardware units needed per stage (Without unit)
  mda['LpA'] = 30 # Launches per Year (Without unit)
  mda['M0'] = 26.60 # Gross Lift-Off Weight (GLOW) - Tonnes
  mda['Mass'] = [25,0,242.6,257,55,2450,0,326,0,0,15,0,312,53.8,10.9,490,0,120,0,0,30,90,45,0,33,0,0,0,0,0,15,20] # Mass - kg
  mda['Mp'] = 24410 # Fuel and oxidizer mass - kg
  mda['Mpres'] = 50 # Pressurizant mass - kg
  mda['M_PA_percentage'] = 0.0525 # Management & Product Assurance Contribution (Without unit)
  mda['n'] = 30 # Number of the unit (Without unit)
  mda['Ns'] = 3.5 # Number of stage (Without unit)
  mda['OnekmRunway'] = 7000 # Cost for 1km of runway - k€/km
  mda['p'] = 0.90 # Learning factor (Without unit)
  mda['PayCap'] = 150 # Payload capacity - kg
  mda['Q_N'] = 1.40 # Vehicle complexity factor (Without unit)
  mda['r'] = 0.12 # Mixture ratio (Without unit)
  mda['S'] = 0.20 # Percent of work subcontracted out (Without unit)
  mda['STH'] = 3.10 # The system test hardware (Without unit)
  mda['Ts'] = 5.365 # Specific transportation cost to launch site
  mda['W'] = 320000 # Work Year Costs - k€
  mda['YearsRunway'] = 20 # Runway years - years



if __name__ == "__main__":
    from tabulate import tabulate

    mda = {}
    initialize(mda)
    headers = ["parameter", "value"]
    data = [[k, mda[k]] for k in mda]
    print(tabulate(data, headers))